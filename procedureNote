 PROCEDURE P_FIBER_SEARCH
    (
    --IN PARAMs
      vr2_i_fiber_id            IN      VARCHAR2
    , vr2_i_networking_type     IN      VARCHAR2
    , vr2_i_status              IN      VARCHAR2
    , vr2_i_backup_flag         IN      VARCHAR2
    , vr2_i_fm_termination_up   IN      VARCHAR2
    , vr2_i_fm_termination_dn   IN      VARCHAR2
    --OUT PARAMs
    , cur_o_fiber                   OUT SYS_TYPES.cursor_type
    --CSBS PARAM
    , num_user                  IN      NUMBER
    , num_status                    OUT NUMBER
    , num_msg_no                    OUT NUMBER
    , vr2_msg_key                   OUT VARCHAR2
    , vr2_msg_param                 OUT VARCHAR2
    , vr2_dbg_pos                   OUT VARCHAR2
    , vr2_msg_severity              OUT VARCHAR2
    , num_elapse                    OUT NUMBER
    )
    AS
        vr2_proc_name  CONSTANT VARCHAR2(61) := cnst_pkg_name||'.'||'P_FIBER_SEARCH';
        pi_trans_start          NUMBER;
        debug_pos               NUMBER := 0;
        num_log_id              NUMBER;
        vr2_log_param           SYS_ACCESS_LOG.APP_PARAM%TYPE;

        num_sub_status          INTEGER := sys_const.num_sp_result_fail;
        num_sub_msg_no          INTEGER;
        vr2_sub_msg_key         VARCHAR2(200);
        vr2_sub_msg_param       VARCHAR2(200);
        vr2_sub_dbg_pos         VARCHAR2(200);
        vr2_sub_msg_severity    VARCHAR2(200);
        num_sub_elapse          INTEGER;

        vr2_validator_result    VARCHAR(1);
        vr2_validator_errmsg    VARCHAR(300);

        ex_sub_call             EXCEPTION;
        ex_validation_failure   EXCEPTION;

        vr2_user                VARCHAR2(50);
    BEGIN
        num_status        := SYS_CONST.NUM_SP_RESULT_FAIL;
        num_msg_no        := 0;
        vr2_msg_key       := '';
        vr2_msg_param     := '';
        vr2_dbg_pos       := '';
        vr2_msg_severity  := '';
        vr2_log_param     :=   'num_user='               ||num_user
                            ||';vr2_i_fiber_id='         ||vr2_i_fiber_id
                            ||';vr2_i_networking_type='  ||vr2_i_networking_type
                            ||';vr2_i_status='           ||vr2_i_status
                            ||';vr2_i_backup_flag='      ||vr2_i_backup_flag
                            ||';vr2_i_fm_termination_up='||vr2_i_fm_termination_up
                            ||';vr2_i_fm_termination_dn='||vr2_i_fm_termination_dn
                            ;

        SYS_ACCESS.START_LOG
        (
            num_sequ_id     => num_log_id
          , num_uid         => num_user
          , vr2_cust_num    => NULL
          , vr2_app_module  => 'OFS.GPON'
          , vr2_app_type    => SYS_ACCESS.VR2_APP_TYPE_QUERY
          , vr2_app_name    => vr2_proc_name
          , vr2_app_param   => vr2_log_param
        );

        debug_pos := 10000;
        pi_trans_start := DBMS_UTILITY.GET_TIME;
        vr2_user       := NVL(F_GET_USER(num_user),USER);

        debug_pos := 20000;
        ------------------------------------------------
        -- [START] - validation
        ------------------------------------------------
        ------------------------------------------------
        -- [END] - validation
        ------------------------------------------------

        ------------------------------------------------
        -- [START] - MAIN LOGIC
        ------------------------------------------------
        debug_pos := 30000;
        BEGIN
            OPEN cur_o_fiber
            FOR
            WITH    rs_fiber AS
                    (
                      SELECT  f.fiber_keyID
                            , f.fiber_id
                            , f.networking_type
                            , f.fm_termination_up
                            , f.fm_termination_dn
                            , f.fiber_loss_at_1310nm
                            , f.fiber_loss_at_1550nm
                            , f.status
                            , f.completion_time
                            , f.backup_flag
                      FROM    GP_FIBER f
                      WHERE   1=1
                      -----------------------------------------------------
                      -->>> SEARCH CRITERIA
                      -----------------------------------------------------
                      AND     (   vr2_i_fiber_id IS NULL
                               OR (    vr2_i_fiber_id IS NOT NULL
                                   AND fiber_id = vr2_i_fiber_id
                                  )
                              )
                      AND     (   vr2_i_networking_type IS NULL
                               OR (    vr2_i_networking_type IS NOT NULL
                                   AND networking_type = vr2_i_networking_type
                                  )
                              )
                      AND     (   vr2_i_status IS NULL
                               OR (    vr2_i_status IS NOT NULL
                                   AND status = vr2_i_status
                                  )
                              )
                      AND     (   vr2_i_backup_flag IS NULL
                               OR (    vr2_i_backup_flag IS NOT NULL
                                   AND backup_flag = vr2_i_backup_flag
                                  )
                              )
                      AND     (   vr2_i_fm_termination_up IS NULL
                               OR (    vr2_i_fm_termination_up IS NOT NULL
                                   AND UPPER(fm_termination_up) LIKE UPPER('%'||vr2_i_fm_termination_up||'%')
                                  )
                              )
                      AND     (   vr2_i_fm_termination_dn IS NULL
                               OR (    vr2_i_fm_termination_dn IS NOT NULL
                                   AND UPPER(fm_termination_dn) LIKE UPPER('%'||vr2_i_fm_termination_dn||'%')
                                  )
                              )
                      -----------------------------------------------------
                      --<<< SEARCH CRITERIA
                      -----------------------------------------------------
                    )
                  , rs_conn AS
                    (
                      SELECT  c.eqp_conn_keyID
                            , c.up_type_cd
                            , c.up_subtype_cd
                            , c.up_keyID
                            , c.up_eqp_type_cd
                            , c.up_eqp_keyID
                            , ci.eqp_conn_item_keyID
                            , f.fiber_keyID
                            , f.fiber_id
                            , f.networking_type
                            , f.fm_termination_up
                            , f.fm_termination_dn
                            , f.fiber_loss_at_1310nm
                            , f.fiber_loss_at_1550nm
                            , f.status fiber_status
                            , f.completion_time fiber_completion_time
                            , f.backup_flag fiber_backup_flag
                            , c.dn_type_cd
                            , c.dn_subtype_cd
                            , c.dn_keyID
                            , c.dn_eqp_type_cd
                            , c.dn_eqp_keyID
                      FROM    rs_fiber         f
                              LEFT JOIN GP_EQP_CONN_ITEM ci ON (    ci.item_eqp_type_cd = 'GP_FIBER'
                                                                AND ci.item_eqp_keyID   = f.fiber_keyID
                                                               )
                              LEFT JOIN GP_EQP_CONN      c  ON (c.eqp_conn_keyID = ci.eqp_Conn_keyID)
                    )
                  , rs_olt AS
                    (
                      SELECT  olt.eqp_seq_no      olt_eqp_seq_no
                            , olt.olt_id          olt_id
                            , INITCAP(olt.status) olt_status
                            , olt.olt_id          olt_label
                      FROM    GP_OLT_MSTR olt
                            , rs_conn     conn
                      WHERE   olt.eqp_seq_no  = conn.up_keyID
                      AND     conn.up_type_cd = 'GP_OLT_MSTR'
                      AND     conn.up_type_cd IS NOT NULL
                      UNION
                      SELECT  olt.eqp_seq_no      olt_eqp_seq_no
                            , olt.olt_id          olt_id
                            , INITCAP(olt.status) olt_status
                            , olt.olt_id          olt_label
                      FROM    GP_OLT_MSTR olt
                            , rs_conn     conn
                      WHERE   olt.eqp_seq_no  = conn.dn_keyID
                      AND     conn.dn_type_cd = 'GP_OLT_MSTR'
                      AND     conn.dn_type_cd IS NOT NULL
                    )
                  , rs_spl AS
                    (
                      SELECT  spl.splitter_keyID            splitter_keyID
                            , spl.splitter_id               splitter_id
                            , INITCAP(spl.status)           splitter_status
                            , (        spl.splitter_id
                               ||', '||INITCAP(spl.status)) splitter_label
                      FROM    GP_SPLITTER spl
                            , rs_conn     conn
                      WHERE   spl.splitter_keyID  = conn.up_keyID
                      AND     conn.up_type_cd = 'GP_SPLITTER'
                      AND     conn.up_type_cd IS NOT NULL
                      UNION
                      SELECT  spl.splitter_keyID            splitter_keyID
                            , spl.splitter_id               splitter_id
                            , INITCAP(spl.status)           splitter_status
                            , (        spl.splitter_id
                               ||', '||INITCAP(spl.status)) splitter_label
                      FROM    GP_SPLITTER spl
                            , rs_conn     conn
                      WHERE   spl.splitter_keyID  = conn.dn_keyID
                      AND     conn.dn_type_cd = 'GP_SPLITTER'
                      AND     conn.dn_type_cd IS NOT NULL
                    )
                  , rs_ne AS
                    (
                      SELECT  spt.splitter_port_keyID
                            , (spt.rmt_obj_type||'/'||spt.rmt_obj_id) ne_label
                      FROM    GP_SPLITTER_PORT  spt
                            , rs_conn           conn
                      WHERE   spt.splitter_port_keyID = conn.up_eqp_keyID
                      AND     conn.up_subtype_cd      = 'C'
                      AND     conn.up_eqp_type_cd     = 'GP_SPLITTER_PORT'
                      AND     conn.up_type_cd         IS NOT NULL
                      AND     (   spt.rmt_obj_type IS NOT NULL
                               OR spt.rmt_obj_id   IS NOT NULL
                              )
                    )
                  , rs_ont AS
                    (
                      SELECT  spt.splitter_port_keyID
                            , ('LL'||'/'||spt.ban_port_srv_ref) ont_label
                      FROM    VW_GP_BAN_SPLITTER_PORT  spt
                            , rs_conn           conn
                      WHERE   spt.splitter_port_keyID = conn.up_eqp_keyID
                      AND     conn.up_subtype_cd      = 'C'
                      AND     conn.up_eqp_type_cd     = 'GP_SPLITTER_PORT'
                      AND     conn.up_type_cd         IS NOT NULL
                      AND     spt.ban_port_eqp_seq_no IS NOT NULL
                      AND     spt.ban_port_srv_ref    IS NOT NULL
                    )
            SELECT  c.eqp_conn_keyID
                  , c.up_type_cd
                  , c.up_subtype_cd
                  , c.up_keyID
                  , c.up_eqp_type_cd
                  , c.up_eqp_keyID
                  , c.eqp_conn_item_keyID
                  , (
                      CASE
                          WHEN c.up_type_cd = 'GP_OLT_MSTR' THEN
                              'OLT'
                          WHEN c.up_type_cd = 'GP_SPLITTER' THEN
                              'SPLITTER'
                          ELSE
                              ''
                      END
                    ) up_disp_type_cd
                  , (
                      CASE
                          WHEN c.up_type_cd = 'GP_OLT_MSTR' THEN
                              u_olt.olt_label
                          WHEN c.up_type_cd = 'GP_SPLITTER' THEN
                              u_spl.splitter_label
                          ELSE
                              ''
                      END
                    ) up_disp_lbl
                  , c.fiber_keyID
                  , c.fiber_id
                  , c.networking_type
                  , c.fm_termination_up
                  , c.fm_termination_dn
                  , c.fiber_loss_at_1310nm
                  , c.fiber_loss_at_1550nm
                  , c.fiber_status
                  , c.fiber_completion_time
                  , c.fiber_backup_flag
                  , c.dn_type_cd
                  , c.dn_subtype_cd
                  , c.dn_keyID
                  , c.dn_eqp_type_cd
                  , c.dn_eqp_keyID
                  , (
                      CASE
                          WHEN (    c.up_type_cd     =  'GP_SPLITTER'
                                AND c.up_subtype_cd  =  'C'
                                AND c.up_eqp_type_cd =  'GP_SPLITTER_PORT'
                               )
                          THEN
                              CASE
                                  WHEN ont.ont_label IS NOT NULL THEN
                                      'ONT'
                                  WHEN ne.ne_label IS NOT NULL THEN
                                      'NE'
                                  ELSE
                                      ''
                              END
                          WHEN c.dn_type_cd = 'GP_OLT_MSTR' THEN
                              'OLT'
                          WHEN c.dn_type_cd = 'GP_SPLITTER' THEN
                              'SPLITTER'
                          ELSE
                              ''
                      END
                    ) dn_disp_type_cd
                  , (
                      CASE
                          WHEN (    c.up_type_cd     =  'GP_SPLITTER'
                                AND c.up_subtype_cd  =  'C'
                                AND c.up_eqp_type_cd =  'GP_SPLITTER_PORT'
                               )
                          THEN
                              CASE
                                  WHEN ont.ont_label IS NOT NULL THEN
                                      ont.ont_label
                                  WHEN ne.ne_label IS NOT NULL THEN
                                      ne.ne_label
                                  ELSE
                                      ''
                              END
                          WHEN c.dn_type_cd = 'GP_OLT_MSTR' THEN
                              d_olt.olt_label
                          WHEN c.dn_type_cd = 'GP_SPLITTER' THEN
                              d_spl.splitter_label
                          ELSE
                              ''
                      END
                    ) dn_disp_lbl
            FROM    rs_conn c
                    LEFT JOIN rs_olt  u_olt  ON (c.up_type_cd = 'GP_OLT_MSTR' AND c.up_keyID = u_olt.olt_eqp_seq_no)
                    LEFT JOIN rs_spl  u_spl  ON (c.up_type_cd = 'GP_SPLITTER' AND c.up_keyID = u_spl.splitter_keyID)
                    LEFT JOIN rs_olt  d_olt  ON (c.dn_type_cd = 'GP_OLT_MSTR' AND c.dn_keyID = d_olt.olt_eqp_seq_no)
                    LEFT JOIN rs_spl  d_spl  ON (c.dn_type_cd = 'GP_SPLITTER' AND c.dn_keyID = d_spl.splitter_keyID)
                    LEFT JOIN rs_ne   ne     ON (c.up_type_cd = 'GP_SPLITTER' AND c.up_subtype_cd = 'C' AND c.up_eqp_type_cd = 'GP_SPLITTER_PORT' AND c.up_eqp_keyID = ne.splitter_port_keyID)
                    LEFT JOIN rs_ont  ont    ON (c.up_type_cd = 'GP_SPLITTER' AND c.up_subtype_cd = 'C' AND c.up_eqp_type_cd = 'GP_SPLITTER_PORT' AND c.up_eqp_keyID = ont.splitter_port_keyID)
            ORDER BY
                    c.fiber_id
            ;
        END;
        ------------------------------------------------
        -- [END] - MAIN LOGIC
        ------------------------------------------------
        --commit;   --Called by transaction -> commit at parent level

        debug_pos := 90000;
        num_elapse := (DBMS_UTILITY.get_time - pi_trans_start);
        num_status := SYS_CONST.NUM_SP_RESULT_SUCCESS;

        SYS_ACCESS.END_NORMAL
        (
            num_sequ_id      => num_log_id
         ,  num_err_code     => SQLCODE
         ,  vr2_err_text     => SQLERRM
         ,  vr2_app_msg      => vr2_dbg_pos
        );
    EXCEPTION
        WHEN ex_validation_failure THEN
            --rollback;   --Called by transaction -> commit at parent level
            num_elapse        := (DBMS_UTILITY.get_time - pi_trans_start);
            num_status        := SYS_CONST.NUM_SP_RESULT_FAIL;
            num_msg_no        := '';
            vr2_dbg_pos       := '';
            vr2_msg_severity  := 'I';
            vr2_msg_key       := 'sys_oracle';
            vr2_msg_param     := vr2_validator_errmsg;
            SYS_ACCESS.END_ERROR
            (
                num_sequ_id      => num_log_id
              , num_err_code     => ''
              , vr2_err_text     => vr2_msg_param
              , vr2_app_msg      => 'ex_validation_failure Exception  SP:' || vr2_proc_name|| '(' || TO_CHAR(debug_pos) || ')'
            );

        WHEN ex_sub_call THEN
            --rollback;   --Called by transaction -> commit at parent level
            num_status        := Sys_Const.num_sp_result_fail;
            num_msg_no        := num_sub_msg_no;
            vr2_msg_severity  := 'I';
            vr2_msg_key       := vr2_sub_msg_key;
            vr2_msg_param     := vr2_sub_msg_param;
            vr2_dbg_pos       := 'EX_SUB_CALL Exception SP: ' || vr2_proc_name || '(' || TO_CHAR(debug_pos) || ')';
            num_elapse        := (DBMS_UTILITY.GET_TIME - pi_trans_start);
            SYS_ACCESS.END_ERROR
            (
                num_sequ_id   => num_log_id
              , num_err_code  => num_msg_no
              , vr2_err_text  => '['||vr2_msg_key||'] :: '||vr2_msg_param
              , vr2_app_msg   => 'EXP_SUB_CALL: ' || vr2_proc_name || '('|| TO_CHAR (debug_pos) || ')->' || vr2_sub_dbg_pos
            );

        WHEN OTHERS THEN
            --rollback;   --Called by transaction -> commit at parent level
            num_elapse        := (DBMS_UTILITY.get_time - pi_trans_start);
            num_status        := SYS_CONST.NUM_SP_RESULT_FAIL;
            num_msg_no        := SQLCODE;
            vr2_dbg_pos       := vr2_dbg_pos
                                 || 'OTHERS Exception  SP:' || vr2_proc_name
                                 || '(' || TO_CHAR(debug_pos) || ')';
            vr2_msg_severity  := 'E';
            vr2_msg_key       := 'sys_oracle';
            vr2_msg_param     := SQLERRM;
            SYS_ACCESS.END_ERROR
            (
                num_sequ_id      => num_log_id
              , num_err_code     => SQLCODE
              , vr2_err_text     => SQLERRM
              , vr2_app_msg      => vr2_dbg_pos
            );
    END P_FIBER_SEARCH;
