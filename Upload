/**
	 * This function handles the event from the UI when user clicking the upload
	 * button
	 */
	public void uploadToFTP() {
		final String THIS_METHOD = "uploadToFTP";
    //是否可以上传标记
		boolean allowToUpload = true;

		String system = null;
    /**
    //判断用户是否有权限上传，可以不用
		for (DtbDocumentTO obj : docList) {
			if (obj.getDocCode().equals(docCode)) {
				allowToUpload = true;
				system = obj.getSystem();
				break;
			}
		}
    **/
		if (allowToUpload) {
			try {
        //uploadFile是用户上传的文件，由于使用的控件是JSF,已经绑定页面控件，spring设值
				String absolutefileName = uploadedFile.getName();
				// DEV 1.3 -> 1.4
				// FIX the problem of ASSUMING client is M$ Windows...
				char pathSeparator = '\\';
				if (absolutefileName.indexOf(pathSeparator) == -1)
					pathSeparator = '/';

				// <Start> Raymon Li Wei Wen 2010-01-28 15:36 remove this
				// checking
				// DEV 1.5 -> 1.6
				// Fixed invalid path exception also prompts successful upload
				// msg
				// if (absolutefileName.indexOf(pathSeparator) == -1) {
				// uploadComplete = false;
				// throw new Exception("'" + absolutefileName +
				// "' not a valid path.");
				// }
				// <End> Raymon Li Wei Wen 2010-01-28 15:36

				// DEV 1.5 -> 1.6
				// Added validation against zero byte or non-exist file
				if (uploadedFile.getSize() <= 0) {
					uploadComplete = false;
					throw new AppRuntimeException("File '" + absolutefileName + "' does not exists or with size of 0 byte.");
				}

				String baseFileName = absolutefileName.substring(absolutefileName.lastIndexOf(pathSeparator) + 1);

				// DEV 1.4 -> 1.5
				// Added system name and destination path to support centralized
				// upload path
				// in format
				// $SYSTEM/IN_QUEUE
        //util是UploadFTPUtil的实例
				util.uploadByByte(system, destinationDir, docCode, uploadedFile.getBytes(), baseFileName, sdf.format(asOfDate), userMB.getUser()
						.getSerialNo());

				uploadComplete = true;
			} catch (Exception e) {
				if (iLog.isErrorEnabled()) {
					iLog.error(THIS_METHOD, e.getMessage());
				}
				msgMB.addTO(new MsgTO(e));
				msgMB.enableEnforceDisplay();
			} finally {
				uploadedFile = null;
			}
		} else {
			// Pages doing file upload requires a full page load
			// Therefore, the validation is in
			// JSF validator way (instead of ajax way)
			FacesContextUtil.getFacesContext().addMessage("uploadForm:txtDocCode",
					new FacesMessage(FacesMessage.SEVERITY_WARN, null, "No upload right for " + docCode));
			uploadedFile = null;
		}
	}
